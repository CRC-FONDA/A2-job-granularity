configfile: "config.yaml"

import csv
from collections import defaultdict

num_bins = 0 # will be read implicitly from the bins file
bins = defaultdict(lambda: [])
with open("data/genomes/bins.tsv", "r") as f:
    reader = csv.reader(f, delimiter='\t')

    for row in reader:
        filename = row[0]
        bin_id = int(row[1])
        bins[bin_id].append(filename)
        num_bins = max(num_bins, bin_id + 1)

genome_bin_files = expand("data/genome_bins/bin_{bin_id}.fasta", bin_id=range(num_bins))
distributed_read_files = expand("data/distributed_reads/bin_{bin_id}.fastq", bin_id=range(num_bins))

rule all:
    input:
        "data/mapped_reads/all.bam"

rule create_bin_file:
    input:
        lambda wildcards: bins[int(wildcards.bin_id)]
    output:
        temp("data/genome_bins/bin_{bin_id}.fasta")
    shell:
        "cat {input} > {output}"

num_threads = config["threads"]

include: "modules/prefilter.smk"
include: "modules/readmapping.smk"
include: "modules/postprocessing.smk"
